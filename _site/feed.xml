<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-08-13T18:31:51-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Alfred Adjei-Darko</title><subtitle>Personal Website of Alfred Adjei-Darko</subtitle><entry><title type="html">Ethics of Data and Analytics</title><link href="http://localhost:4000/posts/2023-06-2-ethics-of-data-and-analytics" rel="alternate" type="text/html" title="Ethics of Data and Analytics" /><published>2023-06-02T15:14:53-04:00</published><updated>2023-06-02T15:14:53-04:00</updated><id>http://localhost:4000/posts/ethics-of-data-and-analytics</id><content type="html" xml:base="http://localhost:4000/posts/2023-06-2-ethics-of-data-and-analytics"><![CDATA[<p>Joel Shapiro shared an insightful perspective on how <i>Advanced analytics and AI can easily lead to decisions that are considered “biased”</i>.
In a recent <a href="https://hbr.org/2023/05/when-to-give-employees-access-to-data-and-analytics#">HBR article</a> exploring the optimal time and degree to which data professionals and employers are to democratize data, he relates a cautionalry tale in the form of a case study featuring Goldman Sachs:</p>

<blockquote>
  <p>Goldman Sachs … was accused of discriminating by offering less credit on an Apple credit card to women than to men. In response, Goldman Sachs said it did not use gender in its model, only factors such as credit history and income. However, one could argue that credit history and income are correlated to gender and using those variables punishes women who tend to make less money on average and historically have had less opportunity to build credit. <mark>When using output that discriminates, decision-makers and data professionals alike need to understand how the data were generated and the interconnectedness of the data, as well as how to measure such things as differential treatment and much more</mark>.</p>
</blockquote>

<p>To mitigate the harms to minority groups, we musst also prioritize fairness, accountability, and transparency in the development of algorithms and AI systems. This includes involving diverse stakeholders in decision-making processes, regularly auditing algorithms for bias, and ensuring that individuals and communities have the right to access, control, and understand the data collected about them.</p>

<p style="text-align: center">***</p>

<p>Henry Kissinger, Google’s Eric Schmidt, and Daniel Huttenlocher further the subject of ethics in data and analytics – specifically, in A.I. – in their book “The Age of A.I.” In the book, when they explore the concept of <i>Dataset Bias</i>, they make the case that machine learning requires substantial amounts of data without which AI cannot learn good models. In instances where there is insufficient data recorded for minority groups like racial minorities, the AI ends up with results that are poor in accuracy. A good example of an instance where insufficient data can lead to suboptimal results can be  found in facial recognition systems. These systems have often been trained with disproportionately fewer pictures of people of color. When they have to perform the task of identifying black people, then, they tend to perform poorly.</p>

<p>There is also the matter of coverage. Training AI does not just require large amounts of data. The data needs to be varied. Training AI with vast amounts of similar data results in neural networks that are incorrectly certain of outcomes because they have never encountered the precipitating conditions before. Consider for example, the extraordinary situation of a deer leaping in front of a self-driving car. If the A.I. has not be trained on what to do in such an instance, it is left unspecified as to what action it is to take.</p>

<p>Human Bias can also Transfer into A.I. Systems. An A.I. reward function can reward a series of chess moves that the encoder subjectively favors.</p>

<p>Bias is not only limited to A.I. technology either. Consider the pulse oximeter, a tool used to measure oxygen saturation in the blood. This tool has been known to overestimate the oxygen saturation in dark skinned individuals because it or its designers assumed that the way light skin absorbs light was ‘normal.’</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Joel Shapiro shared an insightful perspective on how Advanced analytics and AI can easily lead to decisions that are considered “biased”. In a recent HBR article exploring the optimal time and degree to which data professionals and employers are to democratize data, he relates a cautionalry tale in the form of a case study featuring Goldman Sachs:]]></summary></entry><entry><title type="html">A Survey of Visualizations I Like</title><link href="http://localhost:4000/posts/2023-05-8-vizs-I-like" rel="alternate" type="text/html" title="A Survey of Visualizations I Like" /><published>2023-05-08T12:34:53-04:00</published><updated>2023-05-08T12:34:53-04:00</updated><id>http://localhost:4000/posts/vizs-I-like</id><content type="html" xml:base="http://localhost:4000/posts/2023-05-8-vizs-I-like"><![CDATA[<link rel="stylesheet" href="/assets/css/style.css" />

<p>Click on an image for an enlarged view and description</p>

<div class="image-container">
    <a href="#" class="image-link" data-description="Image 1 description">
        <img src="/assets/images/portfolio/mls1.png" alt="Image 1" />
    </a>
    <a href="#" class="image-link" data-description="Image 2 description">
        <img src="/assets/images/portfolio/adp.png" alt="Image 2" />
    </a>
    <a href="#" class="image-link" data-description="Image 3 description">
        <img src="/assets/images/portfolio/mls1.png" alt="Image 3" />
    </a>
    <a href="#" class="image-link" data-description="Image 4 description">
        <img src="/assets/images/portfolio/adp.png" alt="Image 4" />
    </a>
    <a href="#" class="image-link" data-description="Image 1 description">
        <img src="/assets/images/portfolio/mls1.png" alt="Image 1" />
    </a>
    <a href="#" class="image-link" data-description="Image 2 description">
        <img src="/assets/images/portfolio/adp.png" alt="Image 2" />
    </a>
    <a href="#" class="image-link" data-description="Image 3 description">
        <img src="/assets/images/portfolio/mls1.png" alt="Image 3" />
    </a>
    <a href="#" class="image-link" data-description="Image 4 description">
        <img src="/assets/images/portfolio/adp.png" alt="Image 4" />
    </a>
    <!-- Add more image links here -->
</div>

<div class="popup">
    <div class="close">&times;</div>
    <img src="" alt="" />
    <p class="description"></p>
</div>
<script>
  const imageLinks = document.querySelectorAll('.image-link');
  const popup = document.querySelector('.popup');
  const popupClose = document.querySelector('.popup .close');
  const popupImage = document.querySelector('.popup img');
  const popupDescription = document.querySelector('.popup .description');
  imageLinks.forEach(link => {
      link.addEventListener('click', event => {
          event.preventDefault();
          const image = link.querySelector('img');
          const description = link.dataset.description;
          popupImage.src = image.src;
          popupImage.alt = image.alt;
          popupDescription.textContent = description;
          popup.style.display = 'block';
      });
  });
  popupClose.addEventListener('click', () => {
      popup.style.display = 'none';
  });
</script>]]></content><author><name></name></author><summary type="html"><![CDATA[Click on an image for an enlarged view and description]]></summary></entry><entry><title type="html">Python Virtual Environments</title><link href="http://localhost:4000/posts/2022-11-19-python-virtual-environments" rel="alternate" type="text/html" title="Python Virtual Environments" /><published>2022-11-19T20:14:00-05:00</published><updated>2022-11-19T20:14:00-05:00</updated><id>http://localhost:4000/posts/python-virtual-environments</id><content type="html" xml:base="http://localhost:4000/posts/2022-11-19-python-virtual-environments"><![CDATA[<p>Visit <a href="https://www.dataquest.io/blog/a-complete-guide-to-python-virtual-environments/">dataquest</a> for a more in-depth overview of what python virtual environments are, as well as 
what advantages they promise.</p>

<h3 style="margin-top: 1.8em">Creating a Python Virtual Environment (Windows)</h3>
<!-- #; font-size: 14px -->

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">py</span> <span class="o">-</span><span class="n">m</span> <span class="n">venv</span> <span class="p">[</span><span class="s1">'/path/to/new/virtual/environment'</span><span class="p">]</span></code></pre></figure>

<h3 style="margin-top: 1.8em">Activating a Python Virtual Environment</h3>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">[</span><span class="s1">'/path/to/new/virtual/environment'</span><span class="p">]\</span><span class="n">scripts</span><span class="p">\</span><span class="n">activate</span></code></pre></figure>

<h3 style="margin-top: 1.8em">Installing Packages in a Python Virtual Environment</h3>
<p>By default, only pip and setup tools are initially installed. To check the pre-installed packages:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">pip</span> <span class="n">list</span></code></pre></figure>

<p>To upgrade pip:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">py</span> <span class="o">-</span><span class="n">m</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">pip</span></code></pre></figure>

<p>To install new packages:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">py</span> <span class="o">-</span><span class="n">m</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">pandas</span></code></pre></figure>

<h3 style="margin-top: 1.8em">Reproducing a Python Virtual Environment</h3>
<p>You first need to list all the dependencies installed. Export the package list into a requirements.txt file</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">pip</span> <span class="nb">freeze</span> <span class="o">&gt;</span> <span class="n">requirements</span><span class="p">.</span><span class="nf">txt</span></code></pre></figure>

<p>Create a virtual environment, activate it, and then run:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements</span><span class="p">.</span><span class="nf">txt</span></code></pre></figure>

<p>Note:</p>
<blockquote>
  <p>If you’re going to add your project to a Git repository, never add its virtual environment folder to the repository. The only thing you need to add is the requirements.txt file.</p>
</blockquote>

<blockquote>
  <p>A Python project folder contains source code that runs in a virtual environment. On the other hand, a virtual environment is a folder that contains the Python interpreter, packages, and tools like pip. So, the best practice is to keep them separate and never put your project files in a virtual environment folder.</p>
</blockquote>

<h3 style="margin-top: 1.8em">Deactivating a Python Virtual Environment</h3>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">deactivate</span></code></pre></figure>

<h3 style="margin-top: 1.8em">Deleting a Python Virtual Environment</h3>
<p>If you want to delete a virtual environment, you can simply delete its folder, no uninstall required</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="p">[</span><span class="s1">'/path/to/new/virtual/environment'</span><span class="p">]</span></code></pre></figure>

<h3 style="margin-top: 1.8em">Use Python Virtual Environments in Visual Studio Code</h3>
<p>First, ensure you have created and activated a virtual environment.<br />
Then navigate to your project folder in the terminal <br /> 
and run the following command:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">code</span> <span class="o">.</span></code></pre></figure>

<p>The command above will open the project folder in VS Code. If the command above doesn’t work, open VS code, press command + shift + P, to open the Command Palette, type shell command and select Install ‘code’ command in PATH. Now, create a Python file, and name it my_script.py. The last step is to select the virtual environment using the Python: Select Interpreter command from the Command Palette. To do so, press Command + shift + P, and type Python, and choose Select Interpreter.
The Python: Select Interpreter command displays all available environments.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Visit dataquest for a more in-depth overview of what python virtual environments are, as well as what advantages they promise.]]></summary></entry><entry><title type="html">Notable Computing Experts</title><link href="http://localhost:4000/posts/2022-09-16-notable-computing-experts" rel="alternate" type="text/html" title="Notable Computing Experts" /><published>2022-09-16T17:14:53-04:00</published><updated>2022-09-16T17:14:53-04:00</updated><id>http://localhost:4000/posts/notable-computing-experts</id><content type="html" xml:base="http://localhost:4000/posts/2022-09-16-notable-computing-experts"><![CDATA[<h3 style="margin-top: 1.8em">1. Fei-Fei Li</h3>
<p>A professor at Stanford University and co-director of the Stanford Human-Centered AI Institute. Fei-Fei Li is known for her work in AI and human vision, especially in ImageNet, which significantly impacted the field of deep learning. She’s also a co-founder of AI4ALL, a non-profit dedicated to increasing diversity in the AI field.</p>
<div class="publication-links"><a href="https://profiles.stanford.edu/fei-fei-li">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">2. Tim Berners-Lee</h3>
<p>He’s the inventor of the World Wide Web and continues to influence computing with his work on data privacy and control with his project, Solid. His perspectives on the future of the internet are worth following.</p>
<div class="publication-links"><a href="https://www.w3.org/People/Berners-Lee/">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">3. Geoff Hinton</h3>
<p>A pioneer in the field of deep learning and neural networks, Hinton’s work has been instrumental in bringing about the current AI boom. He currently splits his time between the University of Toronto and Google Brain.</p>
<div class="publication-links"><a href="https://www.cs.toronto.edu/~hinton/">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">4. Andrew Ng</h3>
<p>Known for his time at Google, where he helped establish Google Brain, and Baidu, where he served as Chief Scientist. Andrew Ng has been instrumental in the development of machine learning and AI. He’s also a co-founder of Coursera, and his courses on machine learning are extremely popular.</p>
<div class="publication-links"><a href="https://www.andrewng.org/">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">5. Timnit Gebru</h3>
<p>A notable expert in the field of artificial intelligence, specifically in ethical AI, AI bias, and computer vision.</p>
<div class="publication-links"><a href="https://ai.stanford.edu/~tgebru/">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">6. Judea Pearl</h3>
<p>A computer scientist and philosopher, known for his development of Bayesian networks and the causal interpretation of graphical models. He also made significant contributions to the theory of causal and counterfactual inference.</p>
<div class="publication-links"><a href="https://samueli.ucla.edu/judea-pearl/">Current Projects/Affiliations</a></div>

<h3 style="margin-top: 1.8em">7. Yann LeCun</h3>
<p>A French computer scientist known for his work in machine learning, computer vision, mobile robotics, and computational neuroscience. He is a Silver Professor at the Courant Institute of Mathematical Sciences at New York University and the Vice President, Chief AI Scientist at Facebook.</p>
<div class="publication-links"><a href="https://engineering.nyu.edu/faculty/yann-lecun">Current Projects/Affiliations</a></div>]]></content><author><name></name></author><summary type="html"><![CDATA[1. Fei-Fei Li A professor at Stanford University and co-director of the Stanford Human-Centered AI Institute. Fei-Fei Li is known for her work in AI and human vision, especially in ImageNet, which significantly impacted the field of deep learning. She’s also a co-founder of AI4ALL, a non-profit dedicated to increasing diversity in the AI field. Current Projects/Affiliations]]></summary></entry><entry><title type="html">Zen of Computing</title><link href="http://localhost:4000/posts/2022-02-19-zen-of-computing" rel="alternate" type="text/html" title="Zen of Computing" /><published>2022-02-19T17:14:53-05:00</published><updated>2022-02-19T17:14:53-05:00</updated><id>http://localhost:4000/posts/zen-of-computing</id><content type="html" xml:base="http://localhost:4000/posts/2022-02-19-zen-of-computing"><![CDATA[<p><a href="https://tdhopper.com/">Tim Hopper</a> adapted Tim Peters’ <i>Zen of Python</i> for git in <i>Zen of Git</i>.
I have collected both here</p>

<ul>
    <li><a href="https://www.python.org/dev/peps/pep-0020/">Zen of Python</a></li>
    <li><a href="https://tdhopper.com/blog/zen-of-git">Zen of Git</a></li>
</ul>

<!-- 
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:


<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>


Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/ -->]]></content><author><name></name></author><summary type="html"><![CDATA[Tim Hopper adapted Tim Peters’ Zen of Python for git in Zen of Git. I have collected both here]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/posts/2021-05-30-welcome-to-jekyll" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-05-30T14:36:53-04:00</published><updated>2021-05-30T14:36:53-04:00</updated><id>http://localhost:4000/posts/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/posts/2021-05-30-welcome-to-jekyll"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>